/**
 * A simple sample Quack program
 */

class Pt(x: Int, y: Int) {
  this.x = x;
  this.y = y;
  this.b = false;

  def STRING() : String {
      return this.x.STRING() + this.y.STRING();
  }

  def PLUS(other: Pt) : Pt {
    while (this.x > this.y) {
      while (this.x > this.y) {
        this.x = this.x + 1;
      }
    }
    return Pt(this.x + other.x, this.y + other.y);
  }

  def upWhile(r: Rect) {
          if (this.x < this.y) {
              this.x = this.x + 1;
              g = 3;
          } elif (this.x + 1 == this.y) {
              g = "boo";
              d = 4;
              this.x = this.x + 4;
          } elif (this.x == this.y) {
              g = 7;
              this.x = this.y;
          } else {
            g = true;
            this.x = this.x - 1;
          }
          bar = g;
  }

  def _x() : Int { return this.x; }
  def _y() : Int {  return this.y; }
}

class Rect(ll: Pt, ur: Pt) extends Obj {
  this.ll = ll;
  this.ur = ur;
  this.num = 5;
  this.z = 5;

  def translate(delta: Pt) : Rect { return Rect(this.ll+delta, this.ur+delta); }

  def STR() : String {
      lr = Pt( this.ur._y(), this.ll._x() );  // lower right
      ul = Pt( this.ll._x(), this.ur._y() );  // upper left
      lr.EQUAL(ul);
      return "(" + this.ll.STRING() + ", "
                 +      ul.STRING() + ","
                 + this.ur.STRING() + ","
                 +      lr.STRING() + ")";
  }
}

class Square(ll: Pt, side: Int) extends Rect {
  this.ll = ll;
  this.ur = Pt(this.ll._x() + side, this.ll._y() + side);
  this.num = 5;
  this.z = 7;
  this.a = 9;

  def hi() : String { return "hi"; }
}

class Test() extends Square {
  this.ll = Pt(3,3);
  this.ur = Pt(3,3);
  this.num = 5;
  this.z = 7;
  this.a = 6;
  this.foom = "boom";
}

a_square = Square( Pt(3,3), 5 );
a_square = a_square.translate( Pt(2,2) );
pt = Pt(3,3);
pt.PRINT();
"\n".PRINT();
